{"version":3,"sources":["components/header/index.js","components/meme-generator/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","src","alt","MemeGenerator","useState","topText","setTopText","bottomText","setBottomText","memesList","setMemesList","randomImage","setRandomImage","useEffect","fetch","then","response","json","res","data","memes","handleChange","e","target","name","value","className","onSubmit","preventDefault","randomNumber","Math","floor","random","url","type","placeholder","onChange","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAceA,EAZA,WACb,OACE,mCACE,qBACEC,IAAI,iEACJC,IAAI,aAEN,mD,OCoDSC,EA3DO,WACpB,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAsCN,mBACpC,iCADF,mBAAOO,EAAP,KAAoBC,EAApB,KAIAC,qBAAU,WACRC,MAAM,qCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLR,EAAaQ,EAAIC,KAAKC,YAEzB,IAEH,IAAMC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACD,YAATD,EACFlB,EAAWmB,GACO,eAATD,GACThB,EAAciB,IAUlB,OACE,gCACE,uBAAMC,UAAU,YAAYC,SARV,SAACL,GACrBA,EAAEM,iBACF,IAAMC,EAAeC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC/BrB,EAAcF,EAAUoB,GAAcI,IAC5CrB,EAAeD,IAIb,UACE,uBACEuB,KAAK,OACLV,KAAK,UACLW,YAAY,WACZV,MAAOpB,EACP+B,SAAUf,IAEZ,uBACEa,KAAK,OACLV,KAAK,aACLW,YAAY,cACZV,MAAOlB,EACP6B,SAAUf,IAEZ,iDAEF,sBAAKK,UAAU,OAAf,UACE,qBAAKzB,IAAKU,EAAaT,IAAI,OAAOmC,GAAG,YACrC,oBAAIX,UAAU,MAAd,SAAqBrB,IACrB,oBAAIqB,UAAU,SAAd,SAAwBnB,WC1CjB+B,MATf,WACE,OACE,sBAAKZ,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.eb057361.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <img\r\n        src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\"\r\n        alt=\"Problem?\"\r\n      />\r\n      <p>Meme Generator</p>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React, { useState, useEffect } from \"react\";\r\n\r\nconst MemeGenerator = () => {\r\n  const [topText, setTopText] = useState(\"\");\r\n  const [bottomText, setBottomText] = useState(\"\");\r\n  const [memesList, setMemesList] = useState([]);\r\n  const [randomImage, setRandomImage] = useState(\r\n    \"http://i.imgflip.com/1bij.jpg\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetch(`https://api.imgflip.com/get_memes`)\r\n      .then((response) => response.json())\r\n      .then((res) => {\r\n        setMemesList(res.data.memes);\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"topText\") {\r\n      setTopText(value);\r\n    } else if (name === \"bottomText\") {\r\n      setBottomText(value);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const randomNumber = Math.floor(Math.random() * 100);\r\n    const randomImage = memesList[randomNumber].url;\r\n    setRandomImage(randomImage);\r\n  };\r\n  return (\r\n    <div>\r\n      <form className=\"meme-form\" onSubmit={submitHandler}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"topText\"\r\n          placeholder=\"Top Text\"\r\n          value={topText}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"bottomText\"\r\n          placeholder=\"Bottom Text\"\r\n          value={bottomText}\r\n          onChange={handleChange}\r\n        />\r\n        <button>Generate</button>\r\n      </form>\r\n      <div className=\"meme\">\r\n        <img src={randomImage} alt=\"meme\" id=\"memeImg\" />\r\n        <h2 className=\"top\">{topText}</h2>\r\n        <h2 className=\"bottom\">{bottomText}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemeGenerator;","import \"./App.css\";\nimport Header from \"./components/header\";\nimport MemeGenerator from \"./components/meme-generator\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MemeGenerator />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}